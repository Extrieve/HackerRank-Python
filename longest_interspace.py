# The function is expected to return a STRING.
# The function accepts following parameters:
#  1. STRING word
#  2. INTEGER k
#

def longestKInterspaceSubstring(word, k):
    # Write your code here
    substring = word[0]
    longest = word[0]
    length = len(word)
    if abs(ord(max(word)) - ord(min(word))) <= k:
        return word

    for i in range(1, length):
        if abs(ord(word[i]) - ord(word[i - 1])) <= k:
            substring += word[i]
        else:
            substring = word[i]
        if len(longest) < len(substring):
            longest = substring
        if length - (i - 1) < len(longest):
            return longest

    return longest

if __name__ == '__main__':
    print(longestKInterspaceSubstring("jgmskowvdwpedytaqzfcxlrsasmpnxhbvgbbblvnjltdqrstnltskgiumuxmdzzskblxymrexenfducxqxetphdilrlzvuphlbcnhyczqjbuhfzylngvbxsbtncklltykqcfwvvuhkpkkfpfdfvfzueplbojsfglpkdaadaaelqaobyipldsqxtstelkisrbntgttjmbhzogzpysuosrkzknbtdgnscmmdkrxakczneqwzdaxvkbhpftckkhgbmyejyxvnyrsghdzvoncyiaipitvtrohyhunjyiqiknqvzvmcolfsjyxsqeumkqpwpjhccqicdnrdbmsdvwtdtvebpejetrmjgmhiwgxfmsyinbwceuewizfdcqezgqjycsldimmlvlpiieuzfcrxwwjbmlhbpvdaitqnpjbjuwnjkxwgprtuavpuhemurhsjbjwipfdchcqxvjpylfswjdcnkbxtyvhvdpkkqwjzjbusjlbrxylhtezowycbjpgwlywarxibupcrpcvkpgnfirwiygnmmxyvweesauirxvatypvoakdenlvtvukjssbfhmopconqjcbamnwanqrdfjxlafnbvuctwjkycitmfaephbtidaailqpzdrljnbthsjyemvzyfnlegusbvkmtjimmxmbaxsxsobrsiahisvpvywlpjmynnczojxfncsvujdxcvzcedtwzvxgmxmewicudmehcvcwmdnwxgtmjwujfmfczsmgyzleohsteiiblqjqxulbihxaflbfssuumszsvcrspolpocpvprikjzcwggkxsncyzyvlijgypofnychidhxxgvlbpymfzbmnesdhsuxiixdlrdqpvjicpsdzdzlrqntxgtfhawwgxqlzytrwezjknsmltphlqxsieydaowwlnxatyycswendwxqftxmabrhlhevmrqxgfuhgbpuvhzgwleymdpkfukxbndvswoqienufrirewilkrlsvarmcufbfhesiddftqwmktfmqkxeqzuaxwsuowngxoqmaagxpdvenqftlrfjooudtubjmlclarcbwkckmibeunujkfmzaskybsebkdmqpttanlppbhrkoulnsobrknyaourpkogeiwkocriibbjxzaexvgqrtewvznthtkqunbirofzjcejktqcsxiajiojucjyownbpsbskeuocgtcgvkrlyavaqfbbfqjgwgvhabltmmlmiefmftmqcrtrhojimoqmpaphmwoaxgxjosoqgtzfgwzcrxhekudmgkuyrwitdldopqeyzvftswixwvuxumjugkdjvxlzqzkxejkjiuctnxxtcgezbwntamziadpjereuuvcucufafikosntwxmjqotwbmeuhjnpkqxfmsslqyvtittypbxjpioklsagyjpsinkqfqhyiincgtnctapjojixeegpetisvrblisefjacoaugfxsjyoayhwbzirytfucezukhyciecjysunpzcpnobhqrcpsouecbwfhjzsjastrupyfzcmfqpshrgadafktcugkrgzmddpzkbjhoquzctsmqnjkkegjaxguxivqcoanpqcosrbflrhvxjgclytzucmnzzdqsziutxtkibxfqupqsziedtbccblqqhyhkyoaswoqviwjgotiogmnyjbpalmeiuijjfkkblzhqkyjoxsvrvjfkgbwasgmgedkaurkepgiyzpqjznkllehlcsropxjlherznfrylnsnxnkqqbquphkqarqzmujyyfrawgajfiqspfpncseggbchjoihchtjsctaihbhvdjacjzvjttgiiwoiokgynhusfduaivicxyfpgavyojczxitxaqdnieyulmdphnenycgfpewnahgfxwfduhntxhcmcfhdiqoxpiwumwohtswzcslnmdvmceuiiwjxbjrlkbovagjwvqaotqizvlitinzeeaneshrylxczxvflicyeejzynnvttbgnkuehzaqzouvipqbjcnuszquwezfofwdboucdfxcpjeiggzbfrewgvsnejrqnpmqjpvknrzamdtciaeagjxzjsytuqpnollkxkyvwskaiphlboevozrcavfbjflpfeybucwfnytdheslkkgkorsmaycrmpbtitfcvasjfzurhrhkuoqxveyyxloxjwuxgxvfmdwczocioblfxubuydmckrzebeikvkgkedrlyadfbwzqfhuzgxcqugcueuwvayolauoowlrotidqyvtndhiwvsgmxfypspnvpppuruielcxyxfiksfgkccihfdmhfdahubmutkkbolaqayjddybstrasbypzwjnbuswdoqngumbsmdmemtekrdjexxrvfnliovlmjpblpprdbbfwvokibgrjmfawzlzbdlrqcgxmmemptjpwopjsnlwkdkucrbmrwhbwjjkvewkhilivlvbwvnrldvdhukrvriyenuqwyahvqjmpahmrkkmejmbidoynnrlnamwlwedsvbdcznpgzyesisvfvnhkgvexyipjoxqpuztnqmkyuwrfeprypmuprmufukkstptrzaxbhpfmoljpggnyvagoahsolebqasjssonxwgcttolipgqihspzwrlvwogvhgtqhhjeelltkbvwvkpxodjpppluepepzklsswolbtgwkmuanrawkgwqhibrmptgkqkhvjihgfepdwwhjbqswqxhkianbixgtdyayfkwsqsqsskybfulqphlcorbeatwlmlmyffmdmjtzhnytrisddrlwqpvpmohognlhmedrrffhzzrdrkthiknwjmrrqqhklbtfjhzcktdpktwfornddtljeckcwilnzygdjxdfzbuhgiytnubhpllqllqlieayhtagfdyahaxuuclzvvxlcofzjayhbevhzjonptzoreixqawhcglojrllmuiwziejoxryozwqgwqciwzlbllsexhdnkrqqaasmafscyhstltlamfhokebegjwbfkgmrzukszsitrbwjkzextlngscyexcpfihzklrsgtegdsiojgrzpfahpmrdflcwxejijjzzmmagdzwcxtksydcvbymcavtcisrwggfpovrahuzspmuxlmhdgpbahgfforobvimidueeunljdxgenpqqrnepvogmxotaldefelwlhpawfsgadrdbxqjdrjmyjhxvkjrlquiuymehzjhyqbbdssulwpjhtzyoklavvxmgpfslaktojsxzpchauqppmmzctmngdyvxepsnxsuvdcwnymdqnjnggryikbvswmdjfmscykofmsiqdxijzkmwweqahuexmnogzmxdymldyiadoavhunnztehbgihqlypseglphuaaihamdvnpnkwuykvyohjhndhjortlwafbxatckkfratvtvpfafxxqapfymoqvxmitjsxvirnwxszvoetcevojkuqptebpcpasmbfamreouqfmnpmikkjmrkwkwxqgptzbffnsuzxukdkzuzopvwbzccuopkfwvxayztqohifgrrfejzxtrrrbjxhhoyildtpspasejmhgrwbbqkriqdnrnteaiuefrdkwyylgwramblgdctgwrysashapqjrfmklefmukffitjllgbfsquekqvjgmjdjktwfhuzyclposvohvpnrgsbfdgqalslzhfnjliwgchbqhifotmkhbhbhaqjbvhcvsqxmryngxnwswbsuggjgtdmngetyrohidrmwztoskhfbcdokardebcfguwiyutfnetkwnvwqsvyhudsnhylcolebwjvazsftdvfgpnhmvpgsblwjzdytfauqetynahtiwzdatmvqsxzdgbkbawzmnhguxhrfccpdnkraaycleuldglqgrtewvgupkgxnhsnbhdomsfijaqqookfltvzpondbxwnnjleyrqslvnnxuwwkkuzcteacrbewywpujjakqsqwvlkwhffivbofgwuwxtlibkcb", 5))
